package filter.bayesian.gui;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableModel;

import filter.bayesian.common.Message;


/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MyForm.java
 *
 * Created on Apr 5, 2009, 2:30:01 PM
 */
//import
/**
 *
 * @author karthik
 */
public class MyForm extends javax.swing.JFrame {

    public static Communicator communicator = null;
//    private static String spamDirectory = "C:\\Documents and Settings\\Kunal Mehrotra\\My Documents\\Downloads\\trec06p.tgz\\trec06p\\trec06p\\train_spam";
//    private static String hamDirectory = "C:\\Documents and Settings\\Kunal Mehrotra\\My Documents\\Downloads\\trec06p.tgz\\trec06p\\trec06p\\train_ham";
//    private static String testSpamDirectory = "C:\\Documents and Settings\\Kunal Mehrotra\\My Documents\\Downloads\\trec06p.tgz\\trec06p\\trec06p\\test_spam";
//    private static String testHamDirectory = "C:\\Documents and Settings\\Kunal Mehrotra\\My Documents\\Downloads\\trec06p.tgz\\trec06p\\trec06p\\test_ham";
//    private String spamDirectory = "/adobra/amit2/spam";
//    private String hamDirectory = "/adobra/amit2/ham";
//    private String testSpamDirectory = "/adobra/amit2/spam_test";
//    private String testHamDirectory = "/adobra/amit2/ham_test";
//
    
//    private String spamDirectory = "C:\\Users\\shailendra\\workspace\\trec06p\\train_old_spam";
//    private String hamDirectory = "C:\\Users\\shailendra\\workspace\\trec06p\\train_old_ham";
//    private String testSpamDirectory = "C:\\Users\\shailendra\\workspace\\trec06p\\train_old_spam";
//    private String testHamDirectory = "C:\\Users\\shailendra\\workspace\\trec06p\\train_old_ham";
//    private String loadInbox = "C:\\Users\\shailendra\\workspace\\trec06p\\inbox_TestCase1";

    private static String spamDirectory = "/cise/homes/kmehrotr/spamFilter/train_spam";
    private static String hamDirectory = "/cise/homes/kmehrotr/spamFilter/train_ham";
    private static String testSpamDirectory = "/cise/homes/kmehrotr/spamFilter/train_spam";
    private static String testHamDirectory = "/cise/homes/kmehrotr/spamFilter/train_ham";
    private static String loadInbox = "/cise/homes/kmehrotr/spamFilter/inbox";
    
    private int numberOfSpams;
    private int numberOfHams;
    private int numberOfTestSpams;
    private int numberOfTestHams;
    public MySwingWorker spamWorker;
    public MySwingWorker hamWorker;

    public String getSpamDirectory() {
        return spamDirectory;
    }

    public String getHamDirectory() {
        return hamDirectory;
    }

    public int getNumberOfSpams() {
        return numberOfSpams;
    }

    public int getNumberOfHams() {
        return numberOfHams;
    }

    public static MyForm newInstance() {
        MyForm myForm = new MyForm();
        communicator = new Communicator(myForm);
        return myForm;
    }

    /** Creates new form MyForm */
    private MyForm() {
        initComponents();
    }
    // Variable declarations
    //Create a file chooser
    final JFileChooser fc = new JFileChooser();

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        spamBrowseTextField = new javax.swing.JTextField();
        nspamBrowseTextField = new javax.swing.JTextField();
        startTraining = new javax.swing.JButton();
        spamProgressBar = new javax.swing.JProgressBar();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        hamProgressBar = new javax.swing.JProgressBar();
        jScrollPane2 = new javax.swing.JScrollPane();
        featureTable = new javax.swing.JTable();
        numSpamProcessed = new javax.swing.JLabel();
        numHamProcessed = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        totalFeatures = new javax.swing.JLabel();
        nextButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        classifyButton = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        thresholdLabel = new javax.swing.JLabel();
        threshold = new javax.swing.JLabel();
        accuracyLabel = new javax.swing.JLabel();
        accuracy = new javax.swing.JLabel();
        trcLabel = new javax.swing.JLabel();
        trc = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        totalInboxLabel = new javax.swing.JLabel();
        totalInbox = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        inboxTable = new javax.swing.JTable();
        loadInboxButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        inboxPath = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        actualSpamLabel = new javax.swing.JLabel();
        actualSpam = new javax.swing.JLabel();
        misClassifiedHamLabel = new javax.swing.JLabel();
        misClassifiedHam = new javax.swing.JLabel();
        totalSpamLabel = new javax.swing.JLabel();
        totalSpam = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        spamClassificationTable = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        actualHamLabel = new javax.swing.JLabel();
        actualHam = new javax.swing.JLabel();
        misClassifiedSpamLabel = new javax.swing.JLabel();
        misClassifiedSpam = new javax.swing.JLabel();
        totalHamLabel = new javax.swing.JLabel();
        totalHam = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        hamClassificationTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 607, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 504, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 770, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 520, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 770, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 520, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 770, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 520, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Spam Detection - A Bayesian approach to filtering spam");

        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane1.setOpaque(true);

        jLabel1.setText("Path to the spam training set");

        jLabel2.setText("Path to the non-spam training set");

        nspamBrowseTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nspamBrowseTextFieldActionPerformed(evt);
            }
        });

        startTraining.setText("Start training");
        startTraining.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startTrainingActionPerformed(evt);
            }
        });

        spamProgressBar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                spamProgressBarPropertyChange(evt);
            }
        });

        jLabel3.setText("Processing spam messages");

        jLabel4.setText("Processing non-spam messages");

        featureTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Feature Number", "Feature", "Spam", "Non-spam", "Probability"
            }
        ));
        featureTable.setOpaque(false);
        featureTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(featureTable);

        numSpamProcessed.setFont(new java.awt.Font("Tahoma", 1, 11));
        numSpamProcessed.setText("0");

        numHamProcessed.setFont(new java.awt.Font("Tahoma", 1, 11));
        numHamProcessed.setText("0");

        jLabel6.setText("Total number of features");

        totalFeatures.setFont(new java.awt.Font("Tahoma", 1, 11));
        totalFeatures.setText("0");

        nextButton.setText("Display next 100 features");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(totalFeatures, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(nspamBrowseTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(spamBrowseTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(spamProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(hamProgressBar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
                                        .addComponent(startTraining, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(numSpamProcessed, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                                    .addComponent(numHamProcessed)))))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(nextButton)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 841, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(spamBrowseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nspamBrowseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(startTraining, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(spamProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numSpamProcessed))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(numHamProcessed)
                    .addComponent(hamProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(totalFeatures))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(181, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Training Controls    ", jPanel1);

        classifyButton.setText("Classify");
        classifyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classifyButtonActionPerformed(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Evaluation Measures", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        thresholdLabel.setText("Threshold: ");

        threshold.setFont(new java.awt.Font("Tahoma", 1, 11));
        threshold.setText("0");

        accuracyLabel.setText("Accuracy: ");

        accuracy.setFont(new java.awt.Font("Tahoma", 1, 11));
        accuracy.setText("0");

        trcLabel.setText("Total Cost Ratio:");

        trc.setFont(new java.awt.Font("Tahoma", 1, 11));
        trc.setText("0");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(thresholdLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(threshold, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(accuracyLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(accuracy, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(trcLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(trc, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(449, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(thresholdLabel)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(threshold)
                        .addComponent(accuracy)
                        .addComponent(trc)
                        .addComponent(trcLabel)
                        .addComponent(accuracyLabel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Messages", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        totalInboxLabel.setText("Number of Messages in Inbox:");

        totalInbox.setFont(new java.awt.Font("Tahoma", 1, 11));
        totalInbox.setText("0");

        inboxTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Date", "From", "Subject", "FileName"
            }
        ));
        jScrollPane1.setViewportView(inboxTable);

        loadInboxButton.setText("Load Inbox");
        loadInboxButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadInboxButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("Path to Inbox folder: ");

        inboxPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inboxPathActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(totalInboxLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(totalInbox))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(inboxPath, javax.swing.GroupLayout.DEFAULT_SIZE, 623, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(loadInboxButton)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(inboxPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(loadInboxButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalInboxLabel)
                    .addComponent(totalInbox))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Spams", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        actualSpamLabel.setText("Actual number of spams:");

        actualSpam.setFont(new java.awt.Font("Tahoma", 1, 11));
        actualSpam.setText("0");

        misClassifiedHamLabel.setText("Classified spams:");

        misClassifiedHam.setFont(new java.awt.Font("Tahoma", 1, 11));
        misClassifiedHam.setText("0");

        totalSpamLabel.setText("Ham mis-classified as spam:");

        totalSpam.setFont(new java.awt.Font("Tahoma", 1, 11));
        totalSpam.setText("0");

        spamClassificationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "FileName", "Classification"
            }
        ));
        jScrollPane3.setViewportView(spamClassificationTable);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(totalSpamLabel)
                            .addComponent(actualSpamLabel)
                            .addComponent(misClassifiedHamLabel))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(actualSpam)
                            .addComponent(totalSpam)
                            .addComponent(misClassifiedHam)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(actualSpam)
                    .addComponent(actualSpamLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(misClassifiedHamLabel)
                    .addComponent(totalSpam))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totalSpamLabel)
                    .addComponent(misClassifiedHam))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Filtered Inbox", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        actualHamLabel.setText("Actual number of hams:");

        actualHam.setFont(new java.awt.Font("Tahoma", 1, 11));
        actualHam.setText("0");

        misClassifiedSpamLabel.setText("Classified hams:");

        misClassifiedSpam.setFont(new java.awt.Font("Tahoma", 1, 11));
        misClassifiedSpam.setText("0");

        totalHamLabel.setText("Spam mis-classified as hams:");

        totalHam.setFont(new java.awt.Font("Tahoma", 1, 11));
        totalHam.setText("0");

        hamClassificationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "FileName", "Classification"
            }
        ));
        jScrollPane4.setViewportView(hamClassificationTable);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(actualHamLabel)
                            .addComponent(misClassifiedSpamLabel)
                            .addComponent(totalHamLabel))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(misClassifiedSpam)
                            .addComponent(totalHam)
                            .addComponent(actualHam)))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(actualHam)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(totalHam))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(actualHamLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(misClassifiedSpamLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalHamLabel)
                    .addComponent(misClassifiedSpam))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 15));
        jLabel5.setText("     /");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 15));
        jLabel8.setText(" \\");

            javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
            jPanel3.setLayout(jPanel3Layout);
            jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel5)
                                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addGap(1, 1, 1)
                                            .addComponent(jLabel8))
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                            .addGap(350, 350, 350)
                            .addComponent(classifyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );
            jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(classifyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(jLabel5))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(32, Short.MAX_VALUE))
            );

            jTabbedPane1.addTab("Inbox    ", jPanel3);

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jTabbedPane1)
                    .addContainerGap())
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 746, Short.MAX_VALUE)
                    .addContainerGap())
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void nspamBrowseTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nspamBrowseTextFieldActionPerformed
}//GEN-LAST:event_nspamBrowseTextFieldActionPerformed

    public javax.swing.JLabel getNumSpamProcessed() {
        return numSpamProcessed;
    }

    public javax.swing.JLabel getThresholdLabel() {
        return threshold;
    }

    public javax.swing.JLabel getAccuracyLabel() {
        return accuracy;
    }

    public javax.swing.JLabel getTrcLabel() {
        return trc;
    }

    public javax.swing.JButton getStartTrainingButton() {
        return startTraining;
    }
    public javax.swing.JButton getNextButton() {
        return nextButton;
    }

    public javax.swing.JLabel getNumHamProcessed() {
        return numHamProcessed;
    }

    private void startTrainingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startTrainingActionPerformed
        // Code for actions to be performed on clicking START TRAINING button.
        startTraining.setEnabled(false);
        spamProgressBar.setMaximum(100);
        spamProgressBar.setStringPainted(true);

        // Swing Worker to run operations in background, to free up the GUI
        spamWorker = new MySwingWorker(this);
        spamWorker.addPropertyChangeListener(
                new PropertyChangeListener() {

                    public void propertyChange(PropertyChangeEvent evt) {
                        if ("progress".equals(evt.getPropertyName())) {
                            int progressValue = (Integer) evt.getNewValue();
                        spamProgressBar.setValue(progressValue);
                        }
                    }
                });
        // Execute the worker - which runs doInBackground and calls done.
        //spamWorker.execute();
        
        /********* Non-Spam Progress bar code ********/
        hamProgressBar.setMaximum(100);
        hamProgressBar.setStringPainted(true);

        hamWorker = new MySwingWorker(this);
        hamWorker.addPropertyChangeListener(
                new PropertyChangeListener() {

                    public void propertyChange(PropertyChangeEvent evt) {
                        if ("progress".equals(evt.getPropertyName())) {
                            int progressValue = (Integer) evt.getNewValue();
                        hamProgressBar.setValue(progressValue);
                        }
                    }
                });
        hamWorker.execute();
    }//GEN-LAST:event_startTrainingActionPerformed

    private void spamProgressBarPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_spamProgressBarPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_spamProgressBarPropertyChange

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        // TODO add your handling code here:
        nextButton.setVisible(false);
        
        SwingWorker nextButtonWorker = new SwingWorker<Void, Void>() {

            @Override
            protected Void doInBackground() {
                //MyForm myForm = new MyForm();
                System.out.println("Main Jhandu hoon");
                //String response = communicator.issueCommand(Message.DATA_DIRECTORIES, spamDirectory);
                communicator.issueCommand(Message.REQUEST_FEATURE_DETAILS, "THIS IS MADNESS");
                //System.out.println("" + response);
                return null;
            }
            @Override
            public void done() {
                nextButton.setVisible(true);
            }
        };
        nextButtonWorker.execute();
}//GEN-LAST:event_nextButtonActionPerformed

    private void loadInboxButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadInboxButtonActionPerformed
        loadInboxButton.setEnabled(false);
        //loadInboxButton.setVisible(false);
        loadInbox = inboxPath.getText();
        SwingWorker loadInboxButtonWorker = new SwingWorker<Void, Void>(){

            @Override
            protected Void doInBackground() throws Exception {
                loadInboxButton.setText("Loading ...");
                //classifyButton.setEnabled(false);
                communicator.issueCommand(Message.DATA_LOAD_INBOX, loadInbox);
                return null;
            }
            @Override
            public void done() {
                //classifyButton.setEnabled(true);
                loadInboxButton.setText("Load Inbox");
                loadInboxButton.setEnabled(true);
            }
        };
        loadInboxButtonWorker.execute();
    }//GEN-LAST:event_loadInboxButtonActionPerformed

    private void classifyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classifyButtonActionPerformed
        classifyButton.setEnabled(false);
        //classifyButton.setVisible(false);

        SwingWorker classifyButtonWorker = new SwingWorker<Void,Void>(){

            @Override
            protected Void doInBackground() throws Exception {
                classifyButton.setText("Classifying ...");
               communicator.issueCommand(Message.DATA_CLASSIFY_MESSAGES, loadInbox);
               return null;
            }
             @Override
            public void done() {
                 classifyButton.setEnabled(true);
                 classifyButton.setText("Classify");
                //classifyButton.setVisible(true);
            }
        };
        classifyButtonWorker.execute();

    }//GEN-LAST:event_classifyButtonActionPerformed

    private void inboxPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inboxPathActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_inboxPathActionPerformed

    public MySwingWorker getSpamWorker() {
        return spamWorker;
    }

    public MySwingWorker getHamWorker() {
        return hamWorker;
    }

    public javax.swing.JTable getFeatureTable() {
        return featureTable;
    }

    public javax.swing.JTable getInboxTable(){
        return inboxTable;
    }

    public javax.swing.JTable getSpamClassificationTable(){
        return spamClassificationTable;
    }
    public javax.swing.JTable getHamClassificationTable(){
        return hamClassificationTable;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        javax.swing.JFrame.setDefaultLookAndFeelDecorated(true);
//        try {
//            javax.swing.UIManager.setLookAndFeel(new SubstanceBusinessBlueSteelLookAndFeel());
//        } catch (Exception e) {
//            System.out.println("Substance Raven Graphite failed to initialize");
//        }
        java.awt.EventQueue.invokeLater(new Runnable() {

            String columnNames[] = {"Sr. No", "Feature", "Spam", "Non-spam", "Probability"};

            public void run() {
                MyForm frame = newInstance();

                String directories = frame.spamDirectory + ";" + frame.hamDirectory + ";" + frame.testSpamDirectory + ";" + frame.testHamDirectory;

                String response = communicator.issueCommand(Message.DATA_DIRECTORIES, directories);

                String[] stats = response.split(";");
                frame.numberOfSpams = Integer.parseInt(stats[0]);
                frame.numberOfHams = Integer.parseInt(stats[1]);
                frame.numberOfTestSpams = Integer.parseInt(stats[2]);
                frame.numberOfTestHams = Integer.parseInt(stats[3]);

                
                frame.spamBrowseTextField.setText(spamDirectory);
                frame.nspamBrowseTextField.setText(hamDirectory);
                frame.setVisible(true);
                ((DefaultTableModel)frame.featureTable.getModel()).setRowCount(0);
                frame.nextButton.setVisible(false);
                frame.inboxPath.setText(loadInbox);
                frame.hamClassificationTable.setRowSelectionAllowed(true);

//                frame.featureTable.setModel(new AbstractTableModel() {
//
//                    public int getColumnCount() {
//                        return 5;
//                    }
//
//                    public int getRowCount() {
//                        return 10;
//                    }
//
//                    public Object getValueAt(int row, int col) {
//                        return null;
//                    }
////                    public Object getValueAt(int row, int col) {
////                        return new Integer(row * col);
////                    }
//
//                    public String getColumnName(int col) {
//                        return columnNames[col];
//                    }
//                });
            }
        });
    }

    public JButton getStartTraining() {
        return startTraining;
    }

    public javax.swing.JLabel getTotalFeatures(){
        return totalFeatures;
    }
    public javax.swing.JLabel getTotalSpamCount(){
        return totalSpam;
    }
    public javax.swing.JLabel getTotalHamCount(){
        return totalHam;
    }
    public javax.swing.JLabel getMisClassifiedSpamCount(){
        return misClassifiedHam;
    }
    public javax.swing.JLabel getMisClassifiedHamCount(){
        return misClassifiedSpam;
    }
    public javax.swing.JLabel getActualSpamCount(){
        return actualSpam;
    }
    public javax.swing.JLabel getActualHamCount(){
        return actualHam;
    }
    public javax.swing.JLabel getInboxMessageCount(){
        return totalInbox;
    }
    public javax.swing.JLabel getAccuracyCount(){
        return accuracy;
    }

     public void setTotalFeatures(String featureSize){
        this.totalFeatures.setText(featureSize);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel accuracy;
    private javax.swing.JLabel accuracyLabel;
    private javax.swing.JLabel actualHam;
    private javax.swing.JLabel actualHamLabel;
    private javax.swing.JLabel actualSpam;
    private javax.swing.JLabel actualSpamLabel;
    private javax.swing.JButton classifyButton;
    private javax.swing.JTable featureTable;
    private javax.swing.JTable hamClassificationTable;
    private javax.swing.JProgressBar hamProgressBar;
    private javax.swing.JTextField inboxPath;
    private javax.swing.JTable inboxTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton loadInboxButton;
    private javax.swing.JLabel misClassifiedHam;
    private javax.swing.JLabel misClassifiedHamLabel;
    private javax.swing.JLabel misClassifiedSpam;
    private javax.swing.JLabel misClassifiedSpamLabel;
    private javax.swing.JButton nextButton;
    private javax.swing.JTextField nspamBrowseTextField;
    private javax.swing.JLabel numHamProcessed;
    private javax.swing.JLabel numSpamProcessed;
    private javax.swing.JTextField spamBrowseTextField;
    private javax.swing.JTable spamClassificationTable;
    private javax.swing.JProgressBar spamProgressBar;
    private javax.swing.JButton startTraining;
    private javax.swing.JLabel threshold;
    private javax.swing.JLabel thresholdLabel;
    private javax.swing.JLabel totalFeatures;
    private javax.swing.JLabel totalHam;
    private javax.swing.JLabel totalHamLabel;
    private javax.swing.JLabel totalInbox;
    private javax.swing.JLabel totalInboxLabel;
    private javax.swing.JLabel totalSpam;
    private javax.swing.JLabel totalSpamLabel;
    private javax.swing.JLabel trc;
    private javax.swing.JLabel trcLabel;
    // End of variables declaration//GEN-END:variables
}

class MySwingWorker extends SwingWorker {

    MyForm myform = null;

    public MySwingWorker(MyForm myform) {
        this.myform = myform;
    }

    public void setProgressBar(int progress) {
        setProgress(progress);
    }

    /** Operation to be performed in background goes here */
    public Void doInBackground() {
        //Initialize progress property.
        setProgress(0);

        String spamDirectory = myform.getSpamDirectory() + ";" + myform.getHamDirectory();
        myform.communicator.issueCommand(Message.DATA_TO_TRAIN, spamDirectory);
        return null;
    }

    @Override
    public void done() {
        myform.getStartTraining().setEnabled(true);
        myform.getStartTraining().setText("Start Training");
    }
}